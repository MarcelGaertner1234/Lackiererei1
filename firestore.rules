rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================
    // HELPER FUNCTIONS
    // ============================================

    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function getUserStatus() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status;
    }

    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }

    function isMitarbeiter() {
      return isAuthenticated() && getUserRole() == 'mitarbeiter';
    }

    function isPartner() {
      return isAuthenticated() && getUserRole() == 'partner';
    }

    function isKunde() {
      return isAuthenticated() && getUserRole() == 'kunde';
    }

    function isActive() {
      return getUserStatus() == 'active';
    }

    function isOwner(partnerId) {
      return isAuthenticated() && request.auth.uid == partnerId;
    }

    // ============================================
    // USERS COLLECTION
    // ============================================

    match /users/{userId} {
      // Self-Service Registration (no auth required)
      // Users can create their own account with status='pending'
      allow create: if request.resource.data.status == 'pending'
                    && request.resource.data.uid == request.auth.uid;

      // Users can read their own data
      allow read: if isAuthenticated() && request.auth.uid == userId;

      // Admins can read/write all users
      allow read, write: if isAdmin();

      // Mitarbeiter can read all users (but not write)
      allow read: if isMitarbeiter();

      // Users can update their own lastLogin
      allow update: if isAuthenticated()
                    && request.auth.uid == userId
                    && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastLogin']);
    }

    // ============================================
    // FAHRZEUGE COLLECTION (Anfragen)
    // ============================================

    match /fahrzeuge/{requestId} {
      // Admins: Full access to all requests
      allow read, write: if isAdmin();

      // Mitarbeiter: Can read all, can update assigned requests
      allow read: if isMitarbeiter() && isActive();
      allow update: if isMitarbeiter() && isActive();
      allow create: if isMitarbeiter() && isActive();

      // Partner: Can only access their own requests
      allow read: if isPartner() && isActive() && isOwner(resource.data.partnerId);
      allow create: if isPartner() && isActive();
      allow update: if isPartner() && isActive() && isOwner(resource.data.partnerId);

      // Kunde: Read-only access to their own requests
      allow read: if isKunde() && isActive() && isOwner(resource.data.partnerId);

      // Subcollections: Fotos
      match /fotos/{photoId} {
        // Admins: Full access
        allow read, write: if isAdmin();

        // Mitarbeiter: Full access
        allow read, write: if isMitarbeiter() && isActive();

        // Partner: Can read/write their own photos
        allow read, write: if isPartner() && isActive()
                           && isOwner(get(/databases/$(database)/documents/fahrzeuge/$(requestId)).data.partnerId);

        // Kunde: Read-only access to their photos
        allow read: if isKunde() && isActive()
                    && isOwner(get(/databases/$(database)/documents/fahrzeuge/$(requestId)).data.partnerId);
      }
    }

    // ============================================
    // KUNDEN COLLECTION
    // ============================================

    match /kunden/{kundeId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access
      allow read, write: if isMitarbeiter() && isActive();

      // Partner: Can read customers they've registered
      allow read: if isPartner() && isActive() && isOwner(resource.data.partnerId);
      allow create: if isPartner() && isActive();

      // Kunde: Can read their own data
      allow read: if isKunde() && isActive() && isOwner(resource.data.uid);
    }

    // ============================================
    // MATERIAL COLLECTION (Bestellungen)
    // ============================================

    match /material/{materialId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access
      allow read, write: if isMitarbeiter() && isActive();

      // Partner: No access (internal only)
      allow read, write: if false;
    }

    // ============================================
    // KALENDER COLLECTION (Termine)
    // ============================================

    match /kalender/{terminId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access
      allow read, write: if isMitarbeiter() && isActive();

      // Partner: Can read appointments related to their requests
      allow read: if isPartner() && isActive() && isOwner(resource.data.partnerId);
    }

    // ============================================
    // CHATS COLLECTION (KI Chat - Coming Soon)
    // ============================================

    match /chats/{chatId} {
      // Users can only read/write their own chats
      allow read, write: if isAuthenticated() && isActive() && request.auth.uid == resource.data.userId;

      // Admins can read all chats (for moderation)
      allow read: if isAdmin();
    }

    // ============================================
    // EMAIL_LOGS COLLECTION (Cloud Functions only)
    // ============================================

    match /email_logs/{logId} {
      // Admins can read email logs for debugging
      allow read: if isAdmin();

      // ONLY Cloud Functions can write (deny all user writes)
      allow write: if false;
    }

    // ============================================
    // MULTI-TENANT COLLECTIONS (werkstatt-specific)
    // ============================================

    match /fahrzeuge_{werkstatt}/{vehicleId} {
      // Admins: Full access to all werkstätten
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access (same pattern as fahrzeuge)
      allow read, write: if isMitarbeiter() && isActive();

      // Subcollections: Fotos
      match /fotos/{photoId} {
        allow read, write: if isAdmin() || (isMitarbeiter() && isActive());
      }
    }

    match /kunden_{werkstatt}/{kundeId} {
      allow read, write: if isAdmin() || (isMitarbeiter() && isActive());
    }

    // ============================================
    // MITARBEITER MULTI-TENANT (werkstatt-specific employees)
    // ============================================

    match /mitarbeiter_{werkstatt}/{mitarbeiterId} {
      // Admins: Full access to all werkstätten
      allow read, write: if isAdmin();

      // Mitarbeiter: Can read all employees of their werkstatt
      // Can only update themselves (no permission to edit other employees)
      allow read: if isMitarbeiter() && isActive();

      // Only admins can create/delete employees
      allow create, delete: if isAdmin();
    }

    // ============================================
    // KALENDER MULTI-TENANT (werkstatt-specific appointments)
    // ============================================

    match /kalender_{werkstatt}/{terminId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access
      allow read, write: if isMitarbeiter() && isActive();

      // Partner: Can read appointments related to their requests
      allow read: if isPartner() && isActive() && isOwner(resource.data.partnerId);
    }

    // ============================================
    // MATERIAL REQUESTS MULTI-TENANT (werkstatt-specific orders)
    // ============================================

    match /materialRequests_{werkstatt}/{requestId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access (they create material orders)
      allow read, write: if isMitarbeiter() && isActive();

      // Partner/Kunde: No access (internal only)
      allow read, write: if false;
    }

    // ============================================
    // EINSTELLUNGEN MULTI-TENANT (werkstatt-specific settings)
    // ============================================

    match /einstellungen_{werkstatt}/{docId} {
      // Admins: Full access to all werkstätten settings
      allow read, write: if isAdmin();

      // Mitarbeiter: Can read settings (for display purposes)
      // Cannot write (only admins can change settings)
      allow read: if isMitarbeiter() && isActive();

      // Partner/Kunde: No access
      allow read, write: if false;
    }

    // ============================================
    // PARTNER ANFRAGEN (global collection)
    // ============================================

    match /partnerAnfragen/{anfrageId} {
      // Admins: Full access
      allow read, write: if isAdmin();

      // Mitarbeiter: Full access
      allow read, write: if isMitarbeiter() && isActive();

      // Partners: Can create and read their own
      allow create: if isPartner() && isActive();
      allow read: if isPartner() && isActive() && isOwner(resource.data.partnerId);
    }

    // ============================================
    // DEFAULT DENY
    // ============================================

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
