{
  "name": "Fahrzeugannahme - Firebase API Tests (READY TO USE)",
  "nodes": [
    {
      "parameters": {},
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 400],
      "id": "manual-trigger"
    },
    {
      "parameters": {
        "url": "https://marcelgaertner1234.github.io/Lackiererei1/annahme.html",
        "options": {
          "timeout": 15000,
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": true
            }
          }
        }
      },
      "name": "Load Annahme Page",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 200],
      "id": "load-annahme"
    },
    {
      "parameters": {
        "url": "https://marcelgaertner1234.github.io/Lackiererei1/liste.html",
        "options": {
          "timeout": 15000,
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": true
            }
          }
        }
      },
      "name": "Load Liste Page",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 350],
      "id": "load-liste"
    },
    {
      "parameters": {
        "url": "https://marcelgaertner1234.github.io/Lackiererei1/kanban.html",
        "options": {
          "timeout": 15000,
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": true
            }
          }
        }
      },
      "name": "Load Kanban Page",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 500],
      "id": "load-kanban"
    },
    {
      "parameters": {
        "url": "https://marcelgaertner1234.github.io/Lackiererei1/partner-app/index.html",
        "options": {
          "timeout": 15000,
          "response": {
            "response": {
              "fullResponse": false,
              "neverError": true
            }
          }
        }
      },
      "name": "Load Partner Portal",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 650],
      "id": "load-partner"
    },
    {
      "parameters": {
        "jsCode": "var responseData = $input.first().json;\nvar html = typeof responseData === 'string' ? responseData : (responseData.data || responseData.body || '');\n\nvar hasFirebaseApp = html.includes('firebase-app');\nvar hasFirestore = html.includes('firebase-firestore') || html.includes('firestore');\nvar hasStorage = html.includes('firebase-storage') || html.includes('storage');\nvar hasFirebaseConfig = html.includes('firebase-config.js');\n\nvar hasKennzeichenInput = html.includes('id=\"kennzeichen\"') || html.includes('name=\"kennzeichen\"');\nvar hasKundennameInput = html.includes('id=\"kundenname\"') || html.includes('name=\"kundenname\"');\nvar hasSaveButton = html.includes('Speichern') || html.includes('button');\nvar hasPhotoInput = html.includes('photoInput') || html.includes('photo') || html.includes('file');\nvar hasSignaturePad = html.includes('signaturePad') || html.includes('signature') || html.includes('canvas');\n\nvar hasErrorHandler = html.includes('error-handler.js');\nvar hasPDFLibrary = html.includes('jspdf');\n\nvar allChecks = [hasFirebaseApp, hasFirestore, hasStorage, hasFirebaseConfig, hasKennzeichenInput, hasKundennameInput, hasSaveButton, hasPhotoInput, hasSignaturePad, hasErrorHandler, hasPDFLibrary];\n\nvar totalChecks = allChecks.length;\nvar passedChecks = 0;\nfor (var i = 0; i < allChecks.length; i++) {\n  if (allChecks[i] === true) passedChecks++;\n}\nvar passed = passedChecks === totalChecks;\n\nvar result = {\n  timestamp: new Date().toISOString(),\n  testName: 'Firebase Configuration Check',\n  page: 'annahme.html',\n  firebaseSDK: {\n    firebaseApp: hasFirebaseApp ? '✅ Loaded' : '❌ Missing',\n    firestore: hasFirestore ? '✅ Loaded' : '❌ Missing',\n    storage: hasStorage ? '✅ Loaded' : '❌ Missing',\n    config: hasFirebaseConfig ? '✅ Loaded' : '❌ Missing'\n  },\n  domElements: {\n    kennzeichenInput: hasKennzeichenInput ? '✅ Present' : '❌ Missing',\n    kundennameInput: hasKundennameInput ? '✅ Present' : '❌ Missing',\n    saveButton: hasSaveButton ? '✅ Present' : '❌ Missing',\n    photoInput: hasPhotoInput ? '✅ Present' : '❌ Missing',\n    signaturePad: hasSignaturePad ? '✅ Present' : '❌ Missing'\n  },\n  utilityScripts: {\n    errorHandler: hasErrorHandler ? '✅ Loaded' : '❌ Missing',\n    pdfLibrary: hasPDFLibrary ? '✅ Loaded (jsPDF CDN)' : '❌ Missing'\n  },\n  passed: passed,\n  passRate: passedChecks + '/' + totalChecks + ' (' + Math.round((passedChecks/totalChecks)*100) + '%)',\n  status: passed ? '✅ ALL CHECKS PASSED' : '❌ SOME CHECKS FAILED'\n};\n\nreturn [{ json: result }];"
      },
      "name": "Check Firebase Config",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 200],
      "id": "check-firebase-config"
    },
    {
      "parameters": {
        "jsCode": "var responseData = $input.first().json;\nvar html = typeof responseData === 'string' ? responseData : (responseData.data || responseData.body || '');\n\nvar hasRealtimeListener = html.includes('onSnapshot') || html.includes('realtime');\nvar hasFilterButtons = html.includes('filter-btn') || html.includes('filterButton') || html.includes('data-filter');\nvar hasVehicleList = html.includes('fahrzeugListe') || html.includes('vehicle-list') || html.includes('tableContainer');\nvar hasSearchInput = html.includes('search') || html.includes('suche') || html.includes('searchInput');\nvar hasPagination = html.includes('pagination') || html.includes('page');\nvar hasStatusBadges = html.includes('badge') || html.includes('status');\nvar hasExportButton = html.includes('export') || html.includes('Excel') || html.includes('CSV');\n\nvar criticalChecks = [hasFilterButtons, hasVehicleList];\nvar passed = true;\nfor (var i = 0; i < criticalChecks.length; i++) {\n  if (criticalChecks[i] !== true) {\n    passed = false;\n    break;\n  }\n}\n\nvar result = {\n  timestamp: new Date().toISOString(),\n  testName: 'Liste Page Functionality Check',\n  page: 'liste.html',\n  features: {\n    realtimeListener: hasRealtimeListener ? '✅ Present' : '⚠️ Not detected',\n    filterButtons: hasFilterButtons ? '✅ Present' : '❌ Missing',\n    vehicleList: hasVehicleList ? '✅ Present' : '❌ Missing',\n    searchInput: hasSearchInput ? '✅ Present' : '⚠️ Not detected',\n    pagination: hasPagination ? '✅ Present' : '⚠️ Not detected',\n    statusBadges: hasStatusBadges ? '✅ Present' : '⚠️ Not detected',\n    exportButton: hasExportButton ? '✅ Present' : '⚠️ Not detected'\n  },\n  passed: passed,\n  status: passed ? '✅ CRITICAL CHECKS PASSED' : '❌ CRITICAL CHECKS FAILED'\n};\n\nreturn [{ json: result }];"
      },
      "name": "Check Liste Features",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 350],
      "id": "check-liste-features"
    },
    {
      "parameters": {
        "jsCode": "var responseData = $input.first().json;\nvar html = typeof responseData === 'string' ? responseData : (responseData.data || responseData.body || '');\n\nvar hasAngenommenColumn = html.includes('angenommen') || html.includes('Angenommen');\nvar hasInArbeitColumn = html.includes('in-arbeit') || html.includes('In Arbeit') || html.includes('in_arbeit');\nvar hasFertigColumn = html.includes('fertig') || html.includes('Fertig');\nvar hasBereitColumn = html.includes('bereit') || html.includes('Bereit');\nvar hasDragDropLibrary = html.includes('draggable') || html.includes('sortable');\nvar hasCardTemplate = html.includes('card') || html.includes('fahrzeug-card');\nvar hasRealtimeUpdates = html.includes('onSnapshot') || html.includes('realtime');\n\nvar criticalChecks = [hasAngenommenColumn, hasInArbeitColumn, hasFertigColumn, hasBereitColumn, hasCardTemplate];\n\nvar passed = true;\nfor (var i = 0; i < criticalChecks.length; i++) {\n  if (criticalChecks[i] !== true) {\n    passed = false;\n    break;\n  }\n}\n\nvar result = {\n  timestamp: new Date().toISOString(),\n  testName: 'Kanban Page Functionality Check',\n  page: 'kanban.html',\n  kanbanColumns: {\n    angenommen: hasAngenommenColumn ? '✅ Present' : '❌ Missing',\n    inArbeit: hasInArbeitColumn ? '✅ Present' : '❌ Missing',\n    fertig: hasFertigColumn ? '✅ Present' : '❌ Missing',\n    bereit: hasBereitColumn ? '✅ Present' : '❌ Missing'\n  },\n  features: {\n    dragDropLibrary: hasDragDropLibrary ? '✅ Present' : '⚠️ Not detected',\n    cardTemplate: hasCardTemplate ? '✅ Present' : '❌ Missing',\n    realtimeUpdates: hasRealtimeUpdates ? '✅ Present' : '⚠️ Not detected'\n  },\n  passed: passed,\n  status: passed ? '✅ ALL COLUMNS PRESENT' : '❌ MISSING COLUMNS'\n};\n\nreturn [{ json: result }];"
      },
      "name": "Check Kanban Columns",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 500],
      "id": "check-kanban-columns"
    },
    {
      "parameters": {
        "jsCode": "var responseData = $input.first().json;\nvar html = typeof responseData === 'string' ? responseData : (responseData.data || responseData.body || '');\n\nvar hasLoginForm = html.includes('id=\"loginForm\"');\nvar hasPartnerCodeField = html.includes('id=\"partnerCode\"');\nvar hasFirmennameField = html.includes('id=\"firmenname\"');\nvar hasFirebaseIntegration = html.includes('firebase-config.js') || html.includes('firebase-app');\nvar hasPartnerPortalTitle = html.includes('Partner Portal');\n\nvar criticalChecks = [hasLoginForm, hasPartnerCodeField, hasFirebaseIntegration];\n\nvar passed = true;\nfor (var i = 0; i < criticalChecks.length; i++) {\n  if (criticalChecks[i] !== true) {\n    passed = false;\n    break;\n  }\n}\n\nvar result = {\n  timestamp: new Date().toISOString(),\n  testName: 'Partner Portal Functionality Check',\n  page: 'partner-app/index.html',\n  note: 'This page is the LOGIN page, not the request/KVA page',\n  loginFeatures: {\n    loginForm: hasLoginForm ? '✅ Present' : '❌ Missing',\n    partnerCodeField: hasPartnerCodeField ? '✅ Present' : '❌ Missing',\n    firmennameField: hasFirmennameField ? '✅ Present' : '❌ Missing',\n    portalTitle: hasPartnerPortalTitle ? '✅ Present' : '❌ Missing'\n  },\n  integration: {\n    firebaseConfig: hasFirebaseIntegration ? '✅ Loaded' : '❌ Missing'\n  },\n  passed: passed,\n  status: passed ? '✅ PARTNER PORTAL LOGIN OK' : '❌ CRITICAL FEATURES MISSING'\n};\n\nreturn [{ json: result }];"
      },
      "name": "Check Partner Features",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [700, 650],
      "id": "check-partner-features"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "name": "Merge All Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [950, 400],
      "id": "merge-results"
    },
    {
      "parameters": {
        "jsCode": "var allInputs = $input.all();\n\nconsole.log('🔍 Combine Results - Received ' + allInputs.length + ' inputs');\n\nvar firebaseConfigResult = null;\nvar listeResult = null;\nvar kanbanResult = null;\nvar partnerResult = null;\n\nfor (var i = 0; i < allInputs.length; i++) {\n  if (allInputs[i].json && allInputs[i].json.testName) {\n    console.log('  - Test ' + (i+1) + ': ' + allInputs[i].json.testName + ' (' + allInputs[i].json.status + ')');\n    \n    if (allInputs[i].json.testName === 'Firebase Configuration Check') {\n      firebaseConfigResult = allInputs[i].json;\n    } else if (allInputs[i].json.testName === 'Liste Page Functionality Check') {\n      listeResult = allInputs[i].json;\n    } else if (allInputs[i].json.testName === 'Kanban Page Functionality Check') {\n      kanbanResult = allInputs[i].json;\n    } else if (allInputs[i].json.testName === 'Partner Portal Functionality Check') {\n      partnerResult = allInputs[i].json;\n    }\n  }\n}\n\nvar allPassed = true;\nif (!firebaseConfigResult || !firebaseConfigResult.passed) allPassed = false;\nif (!listeResult || !listeResult.passed) allPassed = false;\nif (!kanbanResult || !kanbanResult.passed) allPassed = false;\nif (!partnerResult || !partnerResult.passed) allPassed = false;\n\nvar result = {\n  timestamp: new Date().toISOString(),\n  testSuite: 'Firebase API & Functionality Tests (READY TO USE)',\n  overallStatus: allPassed ? '✅ ALL TESTS PASSED' : '❌ SOME TESTS FAILED',\n  inputCount: allInputs.length,\n  results: {\n    firebaseConfig: {\n      status: firebaseConfigResult ? firebaseConfigResult.status : 'N/A',\n      passRate: firebaseConfigResult ? firebaseConfigResult.passRate : 'N/A',\n      details: firebaseConfigResult || {}\n    },\n    listePage: {\n      status: listeResult ? listeResult.status : 'N/A',\n      details: listeResult || {}\n    },\n    kanbanPage: {\n      status: kanbanResult ? kanbanResult.status : 'N/A',\n      details: kanbanResult || {}\n    },\n    partnerPortal: {\n      status: partnerResult ? partnerResult.status : 'N/A',\n      details: partnerResult || {}\n    }\n  },\n  summary: '\\n📊 FIREBASE API & FUNCTIONALITY TESTS (READY TO USE)\\n' +\n           '===================================================\\n' +\n           'Timestamp: ' + new Date().toLocaleString('de-DE') + '\\n' +\n           'Tests executed: ' + allInputs.length + '/4\\n\\n' +\n           'Overall: ' + (allPassed ? '✅ ALL PASSED' : '❌ FAILURES DETECTED') + '\\n\\n' +\n           '--- Test Results ---\\n' +\n           '1️⃣ Firebase Config: ' + (firebaseConfigResult ? firebaseConfigResult.status : 'N/A') + '\\n' +\n           '   Pass Rate: ' + (firebaseConfigResult ? firebaseConfigResult.passRate : 'N/A') + '\\n\\n' +\n           '2️⃣ Liste Page: ' + (listeResult ? listeResult.status : 'N/A') + '\\n\\n' +\n           '3️⃣ Kanban Page: ' + (kanbanResult ? kanbanResult.status : 'N/A') + '\\n\\n' +\n           '4️⃣ Partner Portal: ' + (partnerResult ? partnerResult.status : 'N/A') + '\\n'\n};\n\nconsole.log(result.summary);\n\nreturn [{ json: result }];"
      },
      "name": "Combine Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1150, 400],
      "id": "combine-results"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final-status",
              "name": "testComplete",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "final-message",
              "name": "message",
              "value": "=Firebase API Tests abgeschlossen: {{ $json.overallStatus }}",
              "type": "string"
            },
            {
              "id": "tests-run",
              "name": "testsRun",
              "value": "={{ $json.inputCount }}/4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "name": "Final Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1350, 400],
      "id": "final-output"
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Load Annahme Page",
            "type": "main",
            "index": 0
          },
          {
            "node": "Load Liste Page",
            "type": "main",
            "index": 0
          },
          {
            "node": "Load Kanban Page",
            "type": "main",
            "index": 0
          },
          {
            "node": "Load Partner Portal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Annahme Page": {
      "main": [
        [
          {
            "node": "Check Firebase Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Liste Page": {
      "main": [
        [
          {
            "node": "Check Liste Features",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Kanban Page": {
      "main": [
        [
          {
            "node": "Check Kanban Columns",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Partner Portal": {
      "main": [
        [
          {
            "node": "Check Partner Features",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Firebase Config": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Liste Features": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check Kanban Columns": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Check Partner Features": {
      "main": [
        [
          {
            "node": "Merge All Results",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge All Results": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Results": {
      "main": [
        [
          {
            "node": "Final Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "firebase-api-tests-ready",
  "meta": {
    "instanceId": "ready-to-use-version"
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-19T14:00:00.000Z",
  "createdAt": "2025-10-19T14:00:00.000Z"
}
