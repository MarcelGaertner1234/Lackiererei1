name: Critical Pipeline E2E Tests

on:
  push:
    branches: [main]
    paths:
      - 'partner-app/**'
      - '*.html'  # RUN #26: Include root HTML files (annahme.html, etc.)
      - 'firebase-config.js'
      - 'firebase-config.template.js'
      - 'tests/**'
      - '.github/workflows/critical-tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'partner-app/**'
      - '*.html'  # RUN #26: Include root HTML files
      - 'firebase-config.js'
      - 'firebase-config.template.js'
      - 'tests/**'
  workflow_dispatch: # Manual trigger

# Permissions f√ºr GITHUB_TOKEN
permissions:
  contents: read
  issues: write  # F√ºr automatische Issue-Erstellung bei Failure
  checks: write  # F√ºr Test-Status Reports

jobs:
  test-critical-pipelines:
    name: E2E Tests - Critical Pipelines
    runs-on: ubuntu-latest

    # RUN #22 FIX: No working-directory needed - repository root IS the app directory
    # Local path: Marketing/06_Digitale_Tools/Fahrzeugannahme_App
    # GitHub repo root: Fahrzeugannahme_App contents (no subdirectory)

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: RUN #29 - Verify Git Commit SHA
        run: |
          echo "üîç RUN #29: Git Commit Verification"
          echo "  Expected commit: 715cea4 (Run #28)"
          echo "  Actual commit: $(git rev-parse --short HEAD)"
          echo ""

          if [ "$(git rev-parse --short HEAD)" = "715cea4" ]; then
            echo "‚úÖ Correct commit checked out (Run #28)"
          else
            echo "‚ö†Ô∏è Different commit checked out - this is expected if new commits were pushed"
            echo "üìã Recent commits:"
            git log --oneline -5
          fi

      - name: RUN #29 CRITICAL - Verify anfrage-detail.html Contains Diagnostics
        run: |
          echo "üîç RUN #29: Verifying anfrage-detail.html contains Run #28 diagnostics..."
          echo "  File: partner-app/anfrage-detail.html"
          echo "  Looking for: RUN #28 DEBUG: firebaseApp structure check"
          echo ""

          if grep -q "RUN #28 DEBUG: firebaseApp structure check" partner-app/anfrage-detail.html; then
            echo "‚úÖ anfrage-detail.html contains Run #28 diagnostics"
            echo ""
            echo "üìÑ Diagnostic lines found:"
            grep -n "RUN #28" partner-app/anfrage-detail.html | head -5
            echo ""
            echo "üìÑ Code context (Lines 1795-1825):"
            sed -n '1795,1825p' partner-app/anfrage-detail.html
          else
            echo "‚ùå CRITICAL ERROR: anfrage-detail.html does NOT contain Run #28 diagnostics!"
            echo "‚ùå This means the checked-out file is from wrong commit or is cached"
            echo ""
            echo "üìÑ File content around Line 1800 (where diagnostics should be):"
            sed -n '1795,1825p' partner-app/anfrage-detail.html
            echo ""
            echo "üìã Git file status:"
            git status partner-app/anfrage-detail.html
            echo ""
            echo "üìã Last commit that modified this file:"
            git log --oneline -1 -- partner-app/anfrage-detail.html
            echo ""
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          npm install -g firebase-tools

      - name: Setup Java for Firebase Emulators
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Start Firebase Emulators
        run: |
          echo "üî• Starting Firebase Emulators..."
          firebase emulators:start --only firestore,storage --project demo-test > firebase-emulator.log 2>&1 &
          EMULATOR_PID=$!
          echo "Emulator PID: $EMULATOR_PID"

          echo "‚è≥ Waiting for emulators to start..."
          sleep 15

          echo "üîç Checking Firestore emulator..."
          for i in {1..10}; do
            if curl -f http://localhost:8080 2>/dev/null; then
              echo "‚úÖ Firestore emulator is ready!"
              break
            fi
            echo "Attempt $i/10: Firestore not ready yet..."
            sleep 2
          done

          echo "üîç Checking Storage emulator..."
          if curl -f http://localhost:9199 2>/dev/null; then
            echo "‚úÖ Storage emulator is ready!"
          else
            echo "‚ö†Ô∏è Storage emulator might not be ready"
          fi

      - name: Configure Firebase for Tests
        run: |
          echo "üìã Firebase Emulators Status:"
          echo "  Firestore: http://localhost:8080"
          echo "  Storage: http://localhost:9199"
          echo ""
          echo "üìÇ Test directories:"
          ls -la tests/ | head -20
          echo ""
          echo "üì¶ Installed packages:"
          npm list @playwright/test playwright 2>/dev/null || echo "Packages check failed"

      - name: Debug - Show Environment
        run: |
          echo "üìç RUN #22 DEBUG: Working Directory and File Locations"
          echo "  PWD: $(pwd)"
          echo "  HOME: $HOME"
          echo "  GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo ""
          echo "üîç Repository structure:"
          echo "  Local: Marketing/06_Digitale_Tools/Fahrzeugannahme_App/"
          echo "  GitHub: Repository root IS the app directory (no subdirs)"
          echo "  Current: $(pwd)"
          echo ""
          echo "üìÅ Root directory contents:"
          ls -lh | grep firebase
          echo ""
          echo "üîç Checking if firebase-config files exist:"
          [ -f "firebase-config.template.js" ] && echo "  ‚úÖ firebase-config.template.js exists" || echo "  ‚ùå firebase-config.template.js NOT FOUND"
          [ -f "firebase-config.js" ] && echo "  ‚úÖ firebase-config.js exists (old version)" || echo "  ‚ö†Ô∏è firebase-config.js does not exist"

      - name: Setup Firebase Config for CI
        run: |
          echo "üîß RUN #24: RADICAL FIX - Copy to NEW filename firebase-config-RUN24.js"
          echo "  Source: firebase-config.template.js"
          echo "  Target: firebase-config-RUN24.js (NEW FILENAME!)"
          echo "  Working Directory: $(pwd)"
          echo "  Reason: Query parameters (?v=RUN23) did NOT work - browser still cached old file"
          echo "  Solution: Completely new filename ‚Üí browser CANNOT use old cache"

          if [ -f "firebase-config.template.js" ]; then
            echo "‚úÖ Template file found"

            # Show template file info
            echo "üìã Template file details:"
            ls -lh firebase-config.template.js
            echo ""

            # RUN #24 CRITICAL FIX: Copy to NEW FILENAME
            echo "üìù Copying template to firebase-config-RUN24.js..."
            cp -v firebase-config.template.js firebase-config-RUN24.js

            # Add timestamp comment
            echo "" >> firebase-config-RUN24.js
            echo "// RUN #24 RADICAL FIX: Copied to new filename at $(date '+%Y-%m-%d %H:%M:%S')" >> firebase-config-RUN24.js
            echo "// Previous attempts with ?v=RUN23 query parameters FAILED - browser cached old file" >> firebase-config-RUN24.js
            echo "// This new filename forces browser to load fresh file with registriereKundenbesuch function" >> firebase-config-RUN24.js

            echo "‚úÖ Copy completed to NEW FILENAME: firebase-config-RUN24.js"
            ls -lh firebase-config-RUN24.js
            echo ""
            echo "üìù Last 5 lines of firebase-config-RUN24.js:"
            tail -5 firebase-config-RUN24.js
          else
            echo "‚ùå ERROR: firebase-config.template.js not found!"
            echo "üìÅ Current directory: $(pwd)"
            echo "üìÅ Files in directory:"
            ls -la
            exit 1
          fi

      - name: RUN #28 CRITICAL - Verify NO Old Files in CI Workspace
        run: |
          echo "üîç RUN #28: CRITICAL FILE VERIFICATION"
          echo "  Verifying that OLD firebase-config.js does NOT exist in CI workspace"
          echo "  This could be causing browser to load wrong file despite HTML referencing firebase-config-RUN24.js"
          echo ""

          # List ALL firebase-config files
          echo "üìÅ All firebase-config* files in workspace:"
          ls -la firebase-config* 2>/dev/null || echo "  (no files matching firebase-config*)"
          echo ""

          # CRITICAL CHECK: firebase-config.js MUST NOT exist
          if [ -f "firebase-config.js" ]; then
            echo "‚ùå CRITICAL ERROR: firebase-config.js EXISTS in CI workspace!"
            echo "‚ùå This file should have been deleted in Run #27"
            echo "‚ùå Browser might be loading this OLD file instead of firebase-config-RUN24.js"
            echo ""
            echo "üìÑ File details:"
            ls -lh firebase-config.js
            echo ""
            echo "üîç Checking if OLD file has registriereKundenbesuch:"
            grep -q "registriereKundenbesuch" firebase-config.js && echo "  ‚úÖ Function found (but wrong structure)" || echo "  ‚ùå Function NOT found!"
            echo ""
            exit 1
          else
            echo "‚úÖ CONFIRMED: firebase-config.js does NOT exist in CI workspace"
            echo "‚úÖ Only firebase-config-RUN24.js should be present"
          fi

      - name: Verify Firebase Config After Copy
        run: |
          echo "üîç RUN #24: Verifying NEW firebase-config-RUN24.js file..."
          echo "  File: firebase-config-RUN24.js (NEW FILENAME)"
          echo "  Location: $(pwd)/firebase-config-RUN24.js"
          echo ""

          # Check file exists
          if [ ! -f "firebase-config-RUN24.js" ]; then
            echo "‚ùå ERROR: firebase-config-RUN24.js does not exist after copy!"
            exit 1
          fi

          # Show first 50 lines
          echo "üìÑ First 50 lines of firebase-config-RUN24.js:"
          head -50 firebase-config-RUN24.js
          echo ""

          # Check for critical function
          echo "üîç Checking for registriereKundenbesuch function..."
          if grep -q "registriereKundenbesuch" firebase-config-RUN24.js; then
            echo "‚úÖ SUCCESS: registriereKundenbesuch FOUND in firebase-config-RUN24.js"
            echo ""
            echo "üìç Function location:"
            grep -n "registriereKundenbesuch" firebase-config-RUN24.js | head -3
          else
            echo "‚ùå CRITICAL ERROR: registriereKundenbesuch NOT FOUND in firebase-config-RUN24.js!"
            echo "‚ùå This explains why tests are failing!"
            echo ""
            echo "üìÑ File content:"
            cat firebase-config-RUN24.js
            exit 1
          fi

          # Check for Arrow Functions (Run #17 fix)
          echo ""
          echo "üîç Checking for Arrow Function syntax..."
          if grep -q "registriereKundenbesuch: async (kundeData) =>" firebase-config-RUN24.js; then
            echo "‚úÖ Arrow Function syntax confirmed (Run #17 fix present)"
          else
            echo "‚ö†Ô∏è WARNING: Arrow Function syntax not found - using old function syntax"
            grep "registriereKundenbesuch" firebase-config-RUN24.js | head -1
          fi

      - name: Verify HTTP Server Can Access File
        run: |
          echo "üåê RUN #24: Verify HTTP server can access firebase-config-RUN24.js"
          echo "  This ensures the browser will load the correct NEW file during tests"
          echo ""

          # Wait for HTTP server to start (started by Playwright in webServer config)
          echo "‚è≥ Waiting for HTTP server to be ready..."
          sleep 3

          # The webServer in playwright.config.js starts before tests
          # But we can simulate what the browser will request
          echo "üìç File should be accessible at: http://localhost:8000/firebase-config-RUN24.js"
          echo "üìÅ File location on disk: $(pwd)/firebase-config-RUN24.js"
          echo ""

          # Verify file exists where HTTP server will serve it from
          if [ -f "firebase-config-RUN24.js" ]; then
            echo "‚úÖ firebase-config-RUN24.js exists in HTTP server root directory"
            echo "   File size: $(stat -f%z firebase-config-RUN24.js 2>/dev/null || stat -c%s firebase-config-RUN24.js) bytes"
          else
            echo "‚ùå CRITICAL: firebase-config-RUN24.js NOT in HTTP server root!"
            echo "   This means browser will get 404 or load old cached version"
            exit 1
          fi

      - name: Run Smoke Tests
        run: npx playwright test tests/00-smoke-test.spec.js --project=${{ matrix.browser }}
        continue-on-error: true

      - name: Run Critical Transaction Failure Tests
        run: npx playwright test tests/05-transaction-failure.spec.js --project=${{ matrix.browser }}
        env:
          FIREBASE_EMULATOR: true

      - name: Run Critical CASCADE DELETE Tests
        run: npx playwright test tests/06-cascade-delete-race.spec.js --project=${{ matrix.browser }}
        env:
          FIREBASE_EMULATOR: true

      - name: Post-Test Verification
        if: always()
        run: |
          echo "üîç RUN #18: Post-Test Verification..."
          echo "  Checking if firebase-config.js was modified during test run..."
          echo ""

          # Check file still exists
          if [ -f "firebase-config.js" ]; then
            echo "‚úÖ firebase-config.js still exists"
            ls -lh firebase-config.js
            echo ""

            # Check function still present
            if grep -q "registriereKundenbesuch" firebase-config.js; then
              echo "‚úÖ registriereKundenbesuch still present after tests"
            else
              echo "‚ùå WARNING: registriereKundenbesuch disappeared after tests!"
              echo "This could indicate file was overwritten during test run"
            fi
          else
            echo "‚ùå ERROR: firebase-config.js was deleted during test run!"
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always() && hashFiles('playwright-report/**') != ''
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30
          if-no-files-found: warn

      - name: Upload Test Artifacts (Screenshots/Videos)
        uses: actions/upload-artifact@v4
        if: always() && hashFiles('test-results/**') != ''
        with:
          name: test-results-${{ matrix.browser }}
          path: test-results/
          retention-days: 7
          if-no-files-found: warn

      - name: Stop Firebase Emulators
        if: always()
        run: |
          pkill -f "firebase.*emulators" || true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-critical-pipelines]
    if: always()

    steps:
      - name: Download Test Reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true
          path: all-reports/

      - name: Generate Summary
        run: |
          echo "## Critical Pipeline Tests Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Suites" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ Smoke Tests (Basic functionality)" >> $GITHUB_STEP_SUMMARY
          echo "- üî¥ Transaction Failure Tests (Orphaned Photos Prevention)" >> $GITHUB_STEP_SUMMARY
          echo "- üî¥ CASCADE DELETE Tests (AFTER-DELETE CHECK)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- **Optimistic Locking**: Prevents duplicate vehicles" >> $GITHUB_STEP_SUMMARY
          echo "- **Orphaned Photos Prevention**: Fotos AFTER transaction" >> $GITHUB_STEP_SUMMARY
          echo "- **AFTER-DELETE CHECK**: Cleans up race condition photos" >> $GITHUB_STEP_SUMMARY
          echo "- **CASCADE DELETE**: Removes fotos subcollection" >> $GITHUB_STEP_SUMMARY
          echo "- **Cross-Check Filter**: Prevents stornierte anfragen in Kanban" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "For detailed results, check the uploaded artifacts." >> $GITHUB_STEP_SUMMARY

  notify-on-failure:
    name: Notify on Test Failure
    runs-on: ubuntu-latest
    needs: [test-critical-pipelines]
    if: failure()

    steps:
      - name: Create Issue on Failure
        uses: actions/github-script@v7
        continue-on-error: true  # Verhindert dass Workflow fehlschl√§gt wenn Issue-Creation fehlschl√§gt
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'üî¥ Critical Pipeline Tests Failed',
                body: `
                  ## Critical E2E Tests haben fehlgeschlagen

                  **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

                  **Branch:** \`${{ github.ref_name }}\`
                  **Commit:** \`${{ github.sha }}\`

                  ### Betroffene Test-Suites:
                  - Transaction Failure Tests (Orphaned Photos Prevention)
                  - CASCADE DELETE Tests (AFTER-DELETE CHECK)

                  ### N√§chste Schritte:
                  1. Pr√ºfe Test-Report in Workflow Artifacts
                  2. Pr√ºfe Screenshots/Videos der fehlgeschlagenen Tests
                  3. √úberpr√ºfe ob Firebase Emulators korrekt gestartet wurden
                  4. Validiere dass Pipeline-Fixes korrekt implementiert sind

                  **Automatisch erstellt von GitHub Actions**
                `,
                labels: ['bug', 'tests', 'critical']
              });
              console.log('‚úÖ Issue erfolgreich erstellt');
            } catch (error) {
              console.log('‚ö†Ô∏è Issue-Erstellung fehlgeschlagen:', error.message);
              console.log('Tests sind fehlgeschlagen, aber Issue konnte nicht erstellt werden.');
            }
