<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Fahrzeug-Abnahme | Auto-Lackierzentrum Mosbach</title>

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

    <!-- Design System -->
    <link rel="stylesheet" href="design-system.css">
    <link rel="stylesheet" href="components.css">
    <link rel="stylesheet" href="animations.css">
    <link rel="stylesheet" href="mobile-first.css">

    <!-- Feather Icons -->
    <script src="https://unpkg.com/feather-icons"></script>

    <!-- GSAP -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>

    <!-- jsPDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

    <style>
        /* ============================================
           🎨 ABNAHME PAGE - DARK GLASS COMPARISON
           ============================================ */

        body {
            min-height: 100vh;
            padding: 0;
            padding-bottom: 0; /* ✅ Bottom Nav entfernt */
            overflow-x: hidden;
            position: relative;
            font-family: 'SF Pro Display', 'Inter', var(--font-system);
        }

        /* ✅ ANIMATED BACKGROUND (Dark Mode - Aurora Animation) */
        body::before {
            content: '';
            position: fixed;
            inset: 0;
            background: var(--gradient-dark-bg);
            z-index: -1;
            animation: aurora 15s ease-in-out infinite;
            transition: all 0.5s ease;
        }

        @keyframes aurora {
            0%, 100% {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
            50% {
                opacity: 0.9;
                transform: scale(1.02) translateY(-5px);
            }
        }

        /* ✅ LIGHT MODE - Static Gradient Background */
        [data-theme="light"] body::before {
            background: linear-gradient(135deg, #f5f7fa 0%, #ffffff 100%);
            animation: none;
        }

        /* ✅ THEME TOGGLE BUTTON (Fixed Position) */
        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            width: 56px;
            height: 56px;
            border-radius: var(--radius-full);
            background: var(--color-surface-elevated);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            box-shadow: var(--shadow-lg), inset 0 1px 1px rgba(255,255,255,0.2);
            cursor: pointer;
            z-index: 9999;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all var(--duration-base) var(--ease-out);
        }

        .theme-toggle:hover {
            transform: scale(1.05);
            box-shadow: var(--shadow-xl), 0 0 30px rgba(0,191,255,0.3);
            border-color: var(--color-primary);
        }

        .theme-toggle__icon {
            width: 24px;
            height: 24px;
            stroke: var(--color-primary);
            position: absolute;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .theme-toggle__icon--light {
            opacity: 0;
            transform: rotate(90deg) scale(0.5);
        }

        .theme-toggle__icon--dark {
            opacity: 1;
            transform: rotate(0deg) scale(1);
        }

        /* Light Mode: Sun zeigen, Moon verstecken */
        [data-theme="light"] .theme-toggle__icon--light {
            opacity: 1;
            transform: rotate(0deg) scale(1);
        }

        [data-theme="light"] .theme-toggle__icon--dark {
            opacity: 0;
            transform: rotate(-90deg) scale(0.5);
        }

        /* ✅ ACCENT-LIGHT (Theme-aware) */
        .accent-light {
            position: fixed;
            top: -20%;
            left: -10%;
            width: 600px;
            height: 600px;
            background: radial-gradient(circle, rgba(0, 191, 255, 0.15) 0%, transparent 70%);
            pointer-events: none;
            z-index: 0;
            animation: pulse 8s ease-in-out infinite;
            transition: opacity 0.5s ease;
        }

        @keyframes pulse {
            0%, 100% { opacity: 0.4; transform: scale(1); }
            50% { opacity: 0.6; transform: scale(1.1); }
        }

        /* ✅ PAGE TRANSITION OVERLAY */
        .page-transition-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--color-background);
            z-index: 99999;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease;
        }

        .page-transition-overlay.active {
            opacity: 1;
            pointer-events: all;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: var(--space-6);
            position: relative;
            z-index: 1;
        }

        /* Hero Header */
        .hero-header {
            text-align: center;
            margin-bottom: var(--space-8);
            animation: fadeIn 0.6s ease-out;
        }

        .hero-header__icon {
            width: 72px;
            height: 72px;
            margin: 0 auto var(--space-4);
            background: var(--color-surface-elevated);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            border-radius: var(--radius-xl);
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: var(--shadow-lg), inset 0 1px 1px rgba(255,255,255,0.2);
        }

        .hero-header__icon svg {
            width: 40px;
            height: 40px;
            stroke: var(--color-primary);
            stroke-width: 2;
            filter: drop-shadow(0 0 8px rgba(0,191,255,0.4));
        }

        .hero-header h1 {
            font-size: clamp(32px, 5vw, 48px);
            font-weight: 800;
            color: var(--color-text-primary);
            margin-bottom: var(--space-2);
            letter-spacing: var(--letter-spacing-tight);
            background: linear-gradient(135deg, #ffffff 0%, #b4b4b8 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .hero-header p {
            font-size: var(--font-size-lg);
            color: var(--color-text-secondary);
        }

        /* Date Display */
        .date-display {
            text-align: center;
            color: var(--color-text-tertiary);
            font-size: var(--font-size-sm);
            margin-bottom: var(--space-6);
        }

        /* Info Box */
        .info-box {
            background: var(--color-surface-elevated);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid rgba(0, 191, 255, 0.3);
            border-radius: var(--radius-lg);
            padding: var(--space-4);
            margin-bottom: var(--space-6);
            display: flex;
            gap: var(--space-3);
            align-items: flex-start;
            box-shadow: var(--shadow-md), inset 0 1px 1px rgba(255,255,255,0.1);
        }

        .info-box svg {
            width: 24px;
            height: 24px;
            stroke: var(--color-primary);
            flex-shrink: 0;
            margin-top: 2px;
        }

        .info-box p {
            color: var(--color-text-primary);
            font-size: var(--font-size-sm);
            line-height: var(--line-height-relaxed);
        }

        /* Vehicle Selection Section */
        .selection-section {
            background: var(--color-surface);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            border-radius: var(--radius-card);
            padding: var(--space-8);
            margin-bottom: var(--space-6);
            box-shadow: var(--shadow-lg), inset 0 1px 1px rgba(255,255,255,0.15);
            position: relative;
            overflow: hidden;
        }

        /* Shine effect */
        .selection-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.3) 50%, transparent 100%);
            opacity: 0.3;
        }

        .selection-section h3 {
            font-size: var(--font-size-xl);
            font-weight: var(--font-weight-semibold);
            color: var(--color-text-primary);
            margin-bottom: var(--space-4);
            display: flex;
            align-items: center;
            gap: var(--space-2);
        }

        .selection-section h3 svg {
            width: 24px;
            height: 24px;
            stroke: var(--color-primary);
        }

        .divider-text {
            text-align: center;
            margin: var(--space-6) 0;
            position: relative;
        }

        .divider-text::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: var(--color-border);
        }

        .divider-text span {
            background: var(--color-background);
            padding: 0 var(--space-4);
            position: relative;
            color: var(--color-text-tertiary);
            font-size: var(--font-size-xs);
            font-weight: var(--font-weight-semibold);
            text-transform: uppercase;
            letter-spacing: 0.1em;
        }

        /* Vehicle Info Display */
        .vehicle-info {
            background: var(--color-surface-elevated);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            border-radius: var(--radius-lg);
            padding: var(--space-6);
            margin-bottom: var(--space-6);
            display: none;
            box-shadow: var(--shadow-md), inset 0 1px 1px rgba(255,255,255,0.1);
        }

        .vehicle-info.show {
            display: block;
            animation: slideDown 0.4s ease-out;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .vehicle-info h3 {
            font-size: var(--font-size-lg);
            font-weight: var(--font-weight-semibold);
            color: var(--color-primary);
            margin-bottom: var(--space-4);
            display: flex;
            align-items: center;
            gap: var(--space-2);
        }

        .vehicle-info h3 svg {
            width: 20px;
            height: 20px;
        }

        .vehicle-info p {
            color: var(--color-text-primary);
            font-size: var(--font-size-sm);
            margin-bottom: var(--space-2);
            display: flex;
            align-items: baseline;
            gap: var(--space-2);
        }

        .vehicle-info p strong {
            color: var(--color-text-secondary);
            min-width: 140px;
        }

        .farbnummer-highlight {
            background: linear-gradient(135deg, rgba(255,149,0,0.1) 0%, rgba(255,59,48,0.1) 100%);
            border: 1px solid rgba(255,149,0,0.3);
            border-radius: var(--radius-md);
            padding: var(--space-4);
            margin-top: var(--space-3);
            display: flex;
            align-items: center;
            gap: var(--space-3);
        }

        .farbnummer-highlight svg {
            width: 24px;
            height: 24px;
            stroke: var(--color-warning);
            flex-shrink: 0;
        }

        .farbnummer-highlight strong {
            color: var(--color-warning);
            font-size: var(--font-size-lg);
            font-weight: var(--font-weight-bold);
        }

        /* Photo Comparison */
        .photo-comparison {
            margin-bottom: var(--space-8);
            display: none;
        }

        .photo-comparison.show {
            display: block;
        }

        .photo-comparison h3 {
            font-size: var(--font-size-2xl);
            font-weight: var(--font-weight-semibold);
            color: var(--color-text-primary);
            margin-bottom: var(--space-6);
            text-align: center;
        }

        .comparison-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--space-6);
        }

        .photo-column {
            background: var(--color-surface);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            border-radius: var(--radius-card);
            padding: var(--space-6);
            box-shadow: var(--shadow-lg), inset 0 1px 1px rgba(255,255,255,0.15);
            position: relative;
            overflow: hidden;
        }

        .photo-column::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.3) 50%, transparent 100%);
            opacity: 0.3;
        }

        .photo-column h4 {
            font-size: var(--font-size-lg);
            font-weight: var(--font-weight-semibold);
            color: var(--color-text-primary);
            margin-bottom: var(--space-4);
            display: flex;
            align-items: center;
            gap: var(--space-2);
        }

        .photo-column h4 svg {
            width: 20px;
            height: 20px;
            stroke: var(--color-primary);
        }

        .photo-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: var(--space-3);
        }

        .photo-item {
            aspect-ratio: 1;
            border-radius: var(--radius-md);
            overflow: hidden;
            position: relative;
            box-shadow: var(--shadow-sm);
            transition: all var(--duration-base) var(--ease-out);
        }

        .photo-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .photo-item.empty {
            background: var(--color-surface-elevated);
            border: 2px dashed var(--color-border);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all var(--duration-base) var(--ease-out);
        }

        .photo-item.empty:hover {
            border-color: var(--color-primary);
            box-shadow: 0 0 20px rgba(0,191,255,0.3);
            transform: scale(1.05);
        }

        .photo-item.empty svg {
            width: 32px;
            height: 32px;
            stroke: var(--color-text-tertiary);
        }

        .remove-photo {
            width: 100%;
            padding: var(--space-1);
            background: var(--color-error);
            color: white;
            border: none;
            border-radius: var(--radius-sm);
            cursor: pointer;
            font-size: var(--font-size-xs);
            margin-top: var(--space-2);
            font-weight: var(--font-weight-semibold);
            transition: all var(--duration-base) var(--ease-out);
        }

        .remove-photo:hover {
            background: #d43a2f;
            box-shadow: 0 0 12px rgba(255,59,48,0.5);
        }

        #photoInput {
            display: none;
        }

        /* Signature Section */
        .signature-section {
            background: var(--color-surface);
            backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
            border: 1px solid var(--color-border-glass);
            border-radius: var(--radius-card);
            padding: var(--space-8);
            margin-bottom: var(--space-6);
            box-shadow: var(--shadow-lg), inset 0 1px 1px rgba(255,255,255,0.15);
            position: relative;
            overflow: hidden;
            display: none;
        }

        .signature-section.show {
            display: block;
        }

        .signature-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.3) 50%, transparent 100%);
            opacity: 0.3;
        }

        .signature-section label {
            font-size: var(--font-size-lg);
            font-weight: var(--font-weight-semibold);
            color: var(--color-text-primary);
            margin-bottom: var(--space-4);
            display: flex;
            align-items: center;
            gap: var(--space-2);
        }

        .signature-section label svg {
            width: 20px;
            height: 20px;
            stroke: var(--color-primary);
        }

        #signatureCanvas {
            width: 100%;
            height: 200px;
            background: var(--color-background);
            border: 2px solid var(--color-border);
            border-radius: var(--radius-lg);
            cursor: crosshair;
            touch-action: none;
            box-shadow: inset 0 2px 8px rgba(0,0,0,0.3);
            transition: all var(--duration-base) var(--ease-out);
        }

        #signatureCanvas:hover {
            border-color: var(--color-primary);
            box-shadow: inset 0 2px 8px rgba(0,0,0,0.3), 0 0 20px rgba(0,191,255,0.2);
        }

        .signature-buttons {
            display: flex;
            gap: var(--space-3);
            margin-top: var(--space-4);
        }

        /* Messages */
        .message {
            padding: var(--space-4);
            border-radius: var(--radius-lg);
            margin-bottom: var(--space-4);
            display: none;
            align-items: center;
            gap: var(--space-3);
            backdrop-filter: blur(var(--glass-blur));
            -webkit-backdrop-filter: blur(var(--glass-blur));
            animation: slideDown 0.3s ease-out;
        }

        .message svg {
            width: 20px;
            height: 20px;
            flex-shrink: 0;
        }

        .error-message {
            background: rgba(255, 59, 48, 0.15);
            border: 1px solid var(--color-error);
            color: var(--color-error);
        }

        .success-message {
            background: rgba(50, 215, 75, 0.15);
            border: 1px solid var(--color-success);
            color: var(--color-success);
        }

        /* ============================================
           🌞 LIGHT MODE OVERRIDES (Konsistent mit liste.html)
           ============================================ */

        /* Glassmorphismus DEAKTIVIEREN */
        [data-theme="light"] .selection-section,
        [data-theme="light"] .vehicle-info,
        [data-theme="light"] .photo-column,
        [data-theme="light"] .signature-section,
        [data-theme="light"] .info-box {
            background: rgba(255, 255, 255, 0.95) !important;
            backdrop-filter: none !important;
            -webkit-backdrop-filter: none !important;
        }

        /* Hero Header */
        [data-theme="light"] .hero-header h1 {
            background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%) !important;
            -webkit-background-clip: text !important;
            -webkit-text-fill-color: transparent !important;
            background-clip: text !important;
        }

        [data-theme="light"] .hero-header p {
            color: #000000 !important;
        }

        /* Section Headings */
        [data-theme="light"] .selection-section h3,
        [data-theme="light"] .vehicle-info h3,
        [data-theme="light"] .photo-column h4,
        [data-theme="light"] .signature-section label {
            color: #000000 !important;
        }

        /* Icons */
        [data-theme="light"] .hero-header__icon i,
        [data-theme="light"] .selection-section h3 i,
        [data-theme="light"] .vehicle-info h3 i,
        [data-theme="light"] .photo-column h4 i,
        [data-theme="light"] .signature-section label i {
            stroke: var(--color-primary) !important;
        }

        /* Text */
        [data-theme="light"] .info-box p,
        [data-theme="light"] .vehicle-info p,
        [data-theme="light"] .date-display {
            color: #000000 !important;
        }

        /* Touch Feedback */
        @media (hover: none) and (pointer: coarse) {
            .photo-item.empty:active {
                transform: scale(0.98);
            }

            .btn:active {
                transform: scale(0.98);
            }
        }

        /* ============================================
           📱 MOBILE OPTIMIERUNGEN (Konsistent mit liste.html)
           ============================================ */

        @media (max-width: 768px) {
            /* Container */
            .container {
                padding: var(--space-4);
            }

            /* Hero Header */
            .hero-header {
                margin-bottom: var(--space-6);
            }

            .hero-header h1 {
                font-size: 32px;
            }

            .hero-header__icon {
                width: 56px;
                height: 56px;
                margin-bottom: var(--space-3);
            }

            .hero-header__icon svg {
                width: 32px;
                height: 32px;
            }

            /* Sections */
            .selection-section,
            .vehicle-info,
            .signature-section {
                padding: var(--space-6);
            }

            /* Photo Comparison */
            .comparison-grid {
                grid-template-columns: 1fr;
                gap: var(--space-4);
            }

            .photo-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            /* Theme Toggle */
            .theme-toggle {
                width: 48px;
                height: 48px;
                top: 16px;
                right: 16px;
            }

            .theme-toggle__icon {
                width: 20px;
                height: 20px;
            }
        }

        @media (max-width: 480px) {
            /* Container */
            .container {
                padding: var(--space-3);
            }

            /* Hero Header */
            .hero-header h1 {
                font-size: 28px;
            }

            /* Sections */
            .selection-section,
            .vehicle-info,
            .signature-section {
                padding: var(--space-4);
            }

            /* Signature Canvas */
            #signatureCanvas {
                height: 150px;
            }

            /* Photo Grid */
            .photo-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>

    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-storage-compat.js"></script>

    <!-- Firebase Konfiguration -->
    <script src="firebase-config.js?v=002ceca"></script>

    <!-- Image Optimizer -->
    <script src="image-optimizer.js"></script>

    <!-- Global Chat Notifications -->
    <link rel="stylesheet" href="global-chat-notifications.css">
    <script src="global-chat-notifications.js"></script>
</head>
<body>
    <!-- ✅ APP-HEADER (Fixed Top) -->
    <header class="app-header">
        <div class="app-header__container">
            <h1 class="app-header__title">Auto-Lackierzentrum Mosbach</h1>
            <button id="themeToggle" class="theme-toggle" aria-label="Toggle Light/Dark Mode">
                <i data-feather="sun" class="theme-toggle__icon theme-toggle__icon--light"></i>
                <i data-feather="moon" class="theme-toggle__icon theme-toggle__icon--dark"></i>
            </button>
        </div>
    </header>

    <!-- ACCENT-LIGHT -->
    <div class="accent-light"></div>

    <!-- PAGE TRANSITION OVERLAY -->
    <div class="page-transition-overlay"></div>

    <!-- ✅ MAIN CONTENT AREA -->
    <main class="content-area">
        <div class="container">
        <!-- Hero Header -->
        <div class="hero-header">
            <div class="hero-header__icon">
                <i data-feather="check-circle"></i>
            </div>
            <h1>Fahrzeug-Abnahme</h1>
            <p>Auto-Lackierzentrum Mosbach</p>
        </div>

        <!-- Date Display -->
        <div class="date-display">
            <i data-feather="calendar"></i> Heute: <strong id="currentDate"></strong>
        </div>

        <!-- Messages -->
        <div class="error-message message" id="errorMessage">
            <i data-feather="alert-circle"></i>
            <span></span>
        </div>
        <div class="success-message message" id="successMessage">
            <i data-feather="check-circle"></i>
            <span>Fahrzeug erfolgreich abgenommen!</span>
        </div>

        <!-- Info Box -->
        <div class="info-box">
            <i data-feather="info"></i>
            <p><strong>Tipp:</strong> Wählen Sie ein Fahrzeug aus dem Dropdown oder geben Sie das Kennzeichen manuell ein. Machen Sie Nachher-Fotos aus den gleichen Winkeln wie die Vorher-Fotos.</p>
        </div>

        <!-- Vehicle Selection -->
        <div class="selection-section">
            <h3>
                <i data-feather="truck"></i>
                Fahrzeug auswählen
            </h3>

            <div class="form-group">
                <label for="vehicleDropdown" class="form-label">
                    Angenommene Fahrzeuge
                </label>
                <select id="vehicleDropdown" class="form-select" onchange="selectFromDropdown()">
                    <option value="">-- Fahrzeug auswählen --</option>
                </select>
            </div>

            <div class="divider-text">
                <span>ODER</span>
            </div>

            <div class="form-group">
                <label for="kennzeichenSearch" class="form-label">
                    Kennzeichen manuell eingeben
                </label>
                <div style="display: flex; gap: var(--space-3);">
                    <input type="text" id="kennzeichenSearch" class="form-input" placeholder="z.B. MOS-CG 123" style="flex: 1;">
                    <button class="btn btn-primary" onclick="searchVehicle()" style="white-space: nowrap;">
                        <i data-feather="search"></i>
                        Suchen
                    </button>
                </div>
            </div>
        </div>

        <!-- Vehicle Info -->
        <div class="vehicle-info" id="vehicleInfo"></div>

        <!-- Photo Comparison -->
        <div class="photo-comparison" id="photoComparison">
            <h3>Foto-Vergleich</h3>
            <div class="comparison-grid">
                <div class="photo-column">
                    <h4>
                        <i data-feather="arrow-left"></i>
                        VORHER (Annahme)
                    </h4>
                    <div class="photo-grid" id="vorherGrid"></div>
                </div>
                <div class="photo-column">
                    <h4>
                        <i data-feather="arrow-right"></i>
                        NACHHER (Abnahme)
                    </h4>
                    <div class="photo-grid" id="nachherGrid">
                        <div class="photo-item empty" onclick="document.getElementById('photoInput').click()">
                            <i data-feather="camera"></i>
                        </div>
                    </div>
                    <input type="file" id="photoInput" accept="image/*" capture="environment" multiple>
                </div>
            </div>
        </div>

        <!-- Signature Section -->
        <div class="signature-section" id="signatureSection">
            <label>
                <i data-feather="edit-3"></i>
                Unterschrift Kunde (Abnahme) *
            </label>
            <canvas id="signatureCanvas" width="800" height="400"></canvas>
            <div class="signature-buttons">
                <button type="button" class="btn btn-secondary" onclick="clearSignature()">
                    <i data-feather="trash-2"></i>
                    Löschen
                </button>
            </div>
        </div>

        <!-- Submit Button -->
        <button type="button" class="btn btn-primary btn-lg" id="submitBtn" onclick="submitAbnahme()" style="width: 100%; display: none;">
            <i data-feather="check-circle"></i>
            Abnahme abschließen & PDF erstellen
        </button>
        </div>
    </main>

    <!-- ✅ BOTTOM NAVIGATION (Fixed Bottom) -->
    <nav class="bottom-nav">
        <a href="index.html" class="bottom-nav__item">
            <i data-feather="home"></i>
            <span class="bottom-nav__label">Start</span>
        </a>
        <a href="annahme.html" class="bottom-nav__item">
            <i data-feather="camera"></i>
            <span class="bottom-nav__label">Annahme</span>
        </a>
        <a href="abnahme.html" class="bottom-nav__item bottom-nav__item--active">
            <i data-feather="check-circle"></i>
            <span class="bottom-nav__label">Abnahme</span>
        </a>
        <a href="kunden.html" class="bottom-nav__item">
            <i data-feather="users"></i>
            <span class="bottom-nav__label">Kunden</span>
        </a>
        <a href="kalender.html" class="bottom-nav__item">
            <i data-feather="calendar"></i>
            <span class="bottom-nav__label">Kalender</span>
        </a>
    </nav>

    <script>
        // Firebase initialisieren
        let firebaseInitialized = false;
        let firebaseApp = null;

        window.addEventListener('load', async function() {
            // Feather Icons initialisieren
            if (typeof feather !== 'undefined') {
                feather.replace();
            }

            // Firebase initialisieren
            try {
                if (typeof initFirebase !== 'undefined') {
                    await initFirebase();
                    if (window.firebaseInitialized && window.firebaseApp) {
                        firebaseApp = window.firebaseApp;
                        firebaseInitialized = true;
                        console.log('✅ Firebase für Abnahme initialisiert');
                    }
                }
            } catch (error) {
                console.warn('⚠️ Firebase nicht verfügbar, verwende LocalStorage:', error);
            }

            // Dropdown mit angenommenen Fahrzeugen laden
            await loadDropdownVehicles();

            // GSAP Animations
            if (typeof gsap !== 'undefined') {
                // Hero Header
                const heroHeader = document.querySelector('.hero-header');
                if (heroHeader) {
                    gsap.fromTo(heroHeader,
                        { opacity: 0, y: -30 },
                        { opacity: 1, y: 0, duration: 0.6, ease: "power2.out" }
                    );
                }

                // Selection Section
                const selectionSection = document.querySelector('.selection-section');
                if (selectionSection) {
                    gsap.fromTo(selectionSection,
                        { opacity: 0, y: 40 },
                        { opacity: 1, y: 0, duration: 0.6, delay: 0.2, ease: "power2.out" }
                    );
                }

                // Info Box
                const infoBox = document.querySelector('.info-box');
                if (infoBox) {
                    gsap.fromTo(infoBox,
                        { opacity: 0, x: -20 },
                        { opacity: 1, x: 0, duration: 0.6, delay: 0.1, ease: "power2.out" }
                    );
                }
            }
        });

        // Aktuelles Datum anzeigen
        const heute = new Date();
        document.getElementById('currentDate').textContent = heute.toLocaleDateString('de-DE', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });

        let currentVehicle = null;
        let nachherPhotos = [];

        // Dropdown mit angenommenen Fahrzeugen laden
        async function loadDropdownVehicles() {
            console.log('🔄 loadDropdownVehicles() aufgerufen...');

            const dropdown = document.getElementById('vehicleDropdown');
            if (!dropdown) {
                console.error('❌ Dropdown-Element nicht gefunden!');
                return;
            }

            try {
                let vehicles = [];

                if (firebaseInitialized && firebaseApp) {
                    const allVehicles = await firebaseApp.getAllFahrzeuge();
                    vehicles = allVehicles.filter(v => v.status !== 'abgeschlossen' && v.status !== 'storniert');
                    console.log('✅ Dropdown geladen: ' + vehicles.length + ' Fahrzeuge (ohne abgeschlossen/storniert)');
                } else {
                    const fahrzeuge = JSON.parse(localStorage.getItem('fahrzeuge') || '[]');
                    vehicles = fahrzeuge.filter(v => v.status !== 'abgeschlossen' && v.status !== 'storniert');
                    console.log('✅ Dropdown geladen (LocalStorage): ' + vehicles.length + ' Fahrzeuge');
                }

                // Migration: Alte baujahr-Werte konvertieren
                vehicles = vehicles.map(v => {
                    if (!v.baujahrVon && v.baujahr) {
                        v.baujahrVon = v.baujahr;
                        if (v.baujahr !== 'Älter') {
                            v.baujahrBis = v.baujahr;
                        }
                    }
                    return v;
                });

                // Dropdown leeren
                dropdown.innerHTML = '<option value="">-- Fahrzeug auswählen --</option>';

                // Fahrzeuge sortieren (bereit zur Abnahme zuerst)
                vehicles.sort((a, b) => {
                    const aBereit = (a.prozessStatus === 'bereit') ? 1 : 0;
                    const bBereit = (b.prozessStatus === 'bereit') ? 1 : 0;
                    if (aBereit !== bBereit) return bBereit - aBereit;
                    return b.id - a.id;
                });

                // Dropdown befüllen
                vehicles.forEach(vehicle => {
                    const option = document.createElement('option');
                    option.value = vehicle.kennzeichen;
                    const bereitBadge = (vehicle.prozessStatus === 'bereit') ? ' 🎯 [BEREIT ZUR ABNAHME]' : '';
                    option.textContent = `${vehicle.kennzeichen} - ${vehicle.marke} ${vehicle.modell} - ${vehicle.kundenname}${bereitBadge}`;
                    dropdown.appendChild(option);
                });

                if (vehicles.length === 0) {
                    dropdown.innerHTML = '<option value="">Keine angenommenen Fahrzeuge vorhanden</option>';
                    dropdown.disabled = true;
                } else {
                    dropdown.disabled = false;
                }

            } catch (error) {
                console.error('❌ Fehler beim Laden des Dropdowns:', error);
                dropdown.innerHTML = '<option value="">Fehler beim Laden der Fahrzeuge</option>';
                dropdown.disabled = true;
            }
        }

        // Fahrzeug aus Dropdown auswählen
        async function selectFromDropdown() {
            const dropdown = document.getElementById('vehicleDropdown');
            const kennzeichen = dropdown.value;

            if (!kennzeichen) {
                resetForm();
                return;
            }

            document.getElementById('kennzeichenSearch').value = kennzeichen;
            await searchVehicle();
        }

        // Fahrzeug suchen
        async function searchVehicle() {
            const kennzeichen = document.getElementById('kennzeichenSearch').value.trim().toUpperCase();

            if (!kennzeichen) {
                showError('Bitte Kennzeichen eingeben!');
                return;
            }

            let vehicle = null;

            try {
                if (firebaseInitialized && firebaseApp) {
                    const allVehicles = await firebaseApp.getAllFahrzeuge();
                    vehicle = allVehicles.find(v => v.kennzeichen.toUpperCase() === kennzeichen && v.status !== 'abgeschlossen' && v.status !== 'storniert');
                } else {
                    const fahrzeuge = JSON.parse(localStorage.getItem('fahrzeuge') || '[]');
                    vehicle = fahrzeuge.find(v => v.kennzeichen.toUpperCase() === kennzeichen && v.status !== 'abgeschlossen' && v.status !== 'storniert');
                }
            } catch (error) {
                console.error('❌ Fehler beim Suchen:', error);
                const fahrzeuge = JSON.parse(localStorage.getItem('fahrzeuge') || '[]');
                vehicle = fahrzeuge.find(v => v.kennzeichen.toUpperCase() === kennzeichen && v.status !== 'abgeschlossen' && v.status !== 'storniert');
            }

            if (!vehicle) {
                showError(`Kein angenommenes Fahrzeug mit Kennzeichen "${kennzeichen}" gefunden!`);
                resetForm();
                return;
            }

            // Fotos aus Firestore nachladen
            if (firebaseInitialized && firebaseApp && (!vehicle.photos || vehicle.photos.length === 0)) {
                console.log('📸 Lade Fotos für Fahrzeug:', vehicle.id);
                try {
                    const allPhotos = await firebaseApp.loadAllPhotosFromFirestore(vehicle.id);
                    vehicle.photos = allPhotos.vorher || [];
                    vehicle.nachherPhotos = allPhotos.nachher || [];
                    console.log('✅ Fotos aus Firestore geladen');
                } catch (e) {
                    console.error('❌ Fehler beim Laden der Fotos:', e);
                    vehicle.photos = [];
                    vehicle.nachherPhotos = [];
                }
            }

            currentVehicle = vehicle;
            displayVehicleInfo(vehicle);
            document.getElementById('photoComparison').classList.add('show');
            document.getElementById('signatureSection').classList.add('show');
            document.getElementById('submitBtn').style.display = 'flex';

            // Canvas initialisieren (nur einmal)
            if (!canvas.hasAttribute('data-initialized')) {
                setTimeout(() => {
                    initCanvas();
                    canvas.setAttribute('data-initialized', 'true');
                    feather.replace();
                }, 50);
            } else {
                feather.replace();
            }
        }

        // Fahrzeug-Infos anzeigen
        function displayVehicleInfo(vehicle) {
            const infoDiv = document.getElementById('vehicleInfo');
            infoDiv.innerHTML = `
                <h3>
                    <i data-feather="file-text"></i>
                    Fahrzeug-Informationen
                </h3>
                <p><strong>Kennzeichen:</strong> <span>${vehicle.kennzeichen}</span></p>
                <p><strong>Kundenname:</strong> <span>${vehicle.kundenname}</span></p>
                <p><strong>Fahrzeug:</strong> <span>${vehicle.marke} ${vehicle.modell}${vehicle.baujahr ? ` (${vehicle.baujahr})` : ''}</span></p>
                ${vehicle.kmstand ? `<p><strong>KM-Stand:</strong> <span>${vehicle.kmstand} km</span></p>` : ''}
                <div class="farbnummer-highlight">
                    <i data-feather="droplet"></i>
                    <div>
                        <strong>FARBNUMMER: ${vehicle.farbnummer}</strong>
                        <div style="color: var(--color-text-secondary); font-size: var(--font-size-sm); margin-top: 4px;">${vehicle.lackart}</div>
                    </div>
                </div>
                ${vehicle.farbname ? `<p style="margin-top: var(--space-3);"><strong>Farbname:</strong> <span>${vehicle.farbname}</span></p>` : ''}
                <p><strong>Angenommen am:</strong> <span>${vehicle.datum} ${vehicle.zeit}</span></p>
                ${vehicle.notizen ? `<p><strong>Schadensbeschreibung:</strong> <span>${vehicle.notizen}</span></p>` : ''}
            `;
            infoDiv.classList.add('show');

            // Vorher-Fotos anzeigen
            const vorherGrid = document.getElementById('vorherGrid');
            vorherGrid.innerHTML = '';
            if (vehicle.photos && vehicle.photos.length > 0) {
                vehicle.photos.forEach(photo => {
                    const div = document.createElement('div');
                    div.className = 'photo-item';
                    div.innerHTML = `<img src="${photo}" alt="Vorher-Foto">`;
                    vorherGrid.appendChild(div);
                });
            } else {
                vorherGrid.innerHTML = '<p style="color: var(--color-text-tertiary); text-align: center;">Keine Vorher-Fotos vorhanden</p>';
            }

            // Feather Icons aktualisieren
            if (typeof feather !== 'undefined') {
                feather.replace();
            }
        }

        // Nachher-Fotos
        const photoInput = document.getElementById('photoInput');
        const nachherGrid = document.getElementById('nachherGrid');

        // Bild komprimieren
        async function compressImage(base64Image, profileName = 'nachherFoto') {
            const result = await ImageOptimizer.compressImage(
                base64Image,
                profileName,
                (progress, message) => {
                    if (progress === 100) {
                        console.log(`✅ ${message}`);
                    }
                }
            );
            console.log(`📊 Komprimierung: ${result.savings}% gespart (${(result.originalSize/1024).toFixed(0)}KB → ${(result.compressedSize/1024).toFixed(0)}KB)`);
            return result.compressed;
        }

        photoInput.addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            files.forEach(file => {
                const reader = new FileReader();
                reader.onload = async function(event) {
                    const compressed = await compressImage(event.target.result);
                    nachherPhotos.push(compressed);
                    updateNachherGrid();
                };
                reader.readAsDataURL(file);
            });
            e.target.value = '';
        });

        function updateNachherGrid() {
            nachherGrid.innerHTML = '';
            nachherPhotos.forEach((photo, index) => {
                const container = document.createElement('div');
                container.innerHTML = `
                    <div class="photo-item">
                        <img src="${photo}" alt="Nachher-Foto ${index + 1}">
                    </div>
                    <button class="remove-photo" onclick="removeNachherPhoto(${index})">
                        <i data-feather="trash-2"></i> Löschen
                    </button>
                `;
                nachherGrid.appendChild(container);
            });

            if (nachherPhotos.length < 10) {
                const emptyDiv = document.createElement('div');
                emptyDiv.className = 'photo-item empty';
                emptyDiv.onclick = () => photoInput.click();
                emptyDiv.innerHTML = '<i data-feather="camera"></i>';
                nachherGrid.appendChild(emptyDiv);
            }

            if (typeof feather !== 'undefined') {
                feather.replace();
            }
        }

        function removeNachherPhoto(index) {
            nachherPhotos.splice(index, 1);
            updateNachherGrid();
        }

        // Unterschrift Canvas
        const canvas = document.getElementById('signatureCanvas');
        const ctx = canvas.getContext('2d');
        let isDrawing = false;
        let hasDrawn = false;

        function initCanvas() {
            const rect = canvas.getBoundingClientRect();
            canvas.width = rect.width * 2;
            canvas.height = rect.height * 2;
            ctx.scale(2, 2);

            ctx.strokeStyle = '#ffffff';
            ctx.lineWidth = 3;
            ctx.lineCap = 'round';
            ctx.lineJoin = 'round';

            if (!hasDrawn) {
                drawPlaceholder();
            }
        }

        function drawPlaceholder() {
            ctx.save();
            ctx.setTransform(1, 0, 0, 1, 0, 0);
            ctx.fillStyle = '#8e8e93';
            ctx.font = '20px Arial';
            ctx.textAlign = 'center';
            ctx.fillText('✍️ Hier unterschreiben', canvas.width / 2, canvas.height / 2);
            ctx.restore();
        }

        function getCoordinates(e) {
            const rect = canvas.getBoundingClientRect();
            const scaleX = canvas.width / rect.width;
            const scaleY = canvas.height / rect.height;

            if (e.touches && e.touches.length > 0) {
                return {
                    x: (e.touches[0].clientX - rect.left) * scaleX / 2,
                    y: (e.touches[0].clientY - rect.top) * scaleY / 2
                };
            } else {
                return {
                    x: (e.clientX - rect.left) * scaleX / 2,
                    y: (e.clientY - rect.top) * scaleY / 2
                };
            }
        }

        function startDrawing(e) {
            e.preventDefault();
            isDrawing = true;

            if (!hasDrawn) {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                hasDrawn = true;
            }

            const coords = getCoordinates(e);
            ctx.beginPath();
            ctx.moveTo(coords.x, coords.y);
        }

        function draw(e) {
            if (!isDrawing) return;
            e.preventDefault();

            const coords = getCoordinates(e);
            ctx.lineTo(coords.x, coords.y);
            ctx.stroke();
        }

        function stopDrawing(e) {
            if (!isDrawing) return;
            e.preventDefault();
            isDrawing = false;
            ctx.closePath();
        }

        canvas.addEventListener('mousedown', startDrawing, false);
        canvas.addEventListener('mousemove', draw, false);
        canvas.addEventListener('mouseup', stopDrawing, false);
        canvas.addEventListener('mouseleave', stopDrawing, false);

        canvas.addEventListener('touchstart', startDrawing, { passive: false });
        canvas.addEventListener('touchmove', draw, { passive: false });
        canvas.addEventListener('touchend', stopDrawing, { passive: false });
        canvas.addEventListener('touchcancel', stopDrawing, { passive: false });

        function clearSignature() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            hasDrawn = false;
            drawPlaceholder();
        }

        // Form absenden
        async function submitAbnahme() {
            console.log('🔄 Submit gestartet');

            if (!currentVehicle) {
                showError('Kein Fahrzeug geladen!');
                return;
            }

            if (nachherPhotos.length === 0) {
                showError('Bitte mindestens 1 Nachher-Foto machen!');
                return;
            }

            if (!hasDrawn) {
                showError('Bitte Unterschrift des Kunden einholen!');
                return;
            }

            const signatureData = canvas.toDataURL();
            const jetzt = new Date();
            const timestamp = Date.now();

            if (!currentVehicle.prozessTimestamps) {
                currentVehicle.prozessTimestamps = {};
            }
            currentVehicle.prozessTimestamps.abgeschlossen = timestamp;

            const abnahmeData = {
                ...currentVehicle,
                abnahmeDatum: jetzt.toLocaleDateString('de-DE'),
                abnahmeZeit: jetzt.toLocaleTimeString('de-DE'),
                nachherPhotos,
                abnahmeSignature: signatureData,
                status: 'abgeschlossen',
                prozessStatus: 'abgeschlossen',
                prozessTimestamps: currentVehicle.prozessTimestamps,
                lastModified: timestamp,
                bezahlt: false,
                rechnungGeschrieben: false
            };

            try {
                if (firebaseInitialized && firebaseApp) {
                    console.log('💾 Hybrid-Update: Status → Firestore, Nachher-Fotos → LocalStorage');

                    await firebaseApp.savePhotosToFirestore(currentVehicle.id, nachherPhotos, 'nachher');

                    const dataForFirestore = { ...abnahmeData };
                    delete dataForFirestore.nachherPhotos;

                    await firebaseApp.updateFahrzeug(currentVehicle.id, dataForFirestore);
                    console.log('✅ Status in Firestore aktualisiert');

                    const vorherPhotos = await firebaseApp.loadPhotosFromFirestore(currentVehicle.id, 'vorher');

                    const dataForPDF = {
                        ...abnahmeData,
                        photos: vorherPhotos,
                        nachherPhotos: nachherPhotos
                    };
                    await createPDF(dataForPDF);
                } else {
                    let fahrzeuge = JSON.parse(localStorage.getItem('fahrzeuge') || '[]');
                    const index = fahrzeuge.findIndex(v => v.id === currentVehicle.id);
                    if (index !== -1) {
                        fahrzeuge[index] = abnahmeData;
                        localStorage.setItem('fahrzeuge', JSON.stringify(fahrzeuge));
                    }
                    console.log('ℹ️ Fahrzeug in LocalStorage aktualisiert');
                    await createPDF(abnahmeData);
                }
            } catch (error) {
                console.error('❌ Fehler beim Aktualisieren:', error);
                let fahrzeuge = JSON.parse(localStorage.getItem('fahrzeuge') || '[]');
                const index = fahrzeuge.findIndex(v => v.id === currentVehicle.id);
                if (index !== -1) {
                    fahrzeuge[index] = abnahmeData;
                    localStorage.setItem('fahrzeuge', JSON.stringify(fahrzeuge));
                }
                await createPDF(abnahmeData);
            }

            showSuccess('Fahrzeug erfolgreich abgenommen!');
            await loadDropdownVehicles();

            setTimeout(() => {
                window.location.href = 'liste.html';
            }, 2000);
        }

        // PDF erstellen
        async function createPDF(data) {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            let failedImages = 0;

            const safeAddImage = (imageData, format, x, y, width, height, label = 'Foto') => {
                try {
                    if (!imageData || imageData === '') {
                        throw new Error('Leeres Foto');
                    }
                    doc.addImage(imageData, format, x, y, width, height);
                    return true;
                } catch (error) {
                    console.error(`❌ Fehler beim Hinzufügen des Bildes (${label}):`, error);
                    failedImages++;

                    doc.setFillColor(240, 240, 240);
                    doc.rect(x, y, width, height, 'F');
                    doc.setDrawColor(200, 200, 200);
                    doc.rect(x, y, width, height, 'S');

                    doc.setFontSize(10);
                    doc.setTextColor(150, 150, 150);
                    doc.text('⚠️ Foto konnte nicht', x + width/2, y + height/2 - 5, { align: 'center' });
                    doc.text('geladen werden', x + width/2, y + height/2 + 5, { align: 'center' });
                    doc.setTextColor(0, 0, 0);

                    return false;
                }
            };

            // Header
            doc.setFillColor(0, 191, 255);
            doc.rect(0, 0, 210, 40, 'F');
            doc.setTextColor(255, 255, 255);
            doc.setFontSize(24);
            doc.text('Fahrzeug-Abnahmeprotokoll', 105, 20, { align: 'center' });
            doc.setFontSize(12);
            doc.text('Auto-Lackierzentrum Mosbach', 105, 30, { align: 'center' });

            // Daten
            doc.setTextColor(0, 0, 0);
            doc.setFontSize(12);
            let y = 55;

            doc.setFont(undefined, 'bold');
            doc.text('Annahme:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.datum + ' ' + data.zeit, 60, y);

            y += 10;
            doc.setFont(undefined, 'bold');
            doc.text('Abnahme:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.abnahmeDatum + ' ' + data.abnahmeZeit, 60, y);

            y += 10;
            doc.setFont(undefined, 'bold');
            doc.text('Kennzeichen:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.kennzeichen, 60, y);

            y += 10;
            doc.setFont(undefined, 'bold');
            doc.text('Kundenname:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.kundenname, 60, y);

            // Fahrzeugdaten
            y += 12;
            doc.setFillColor(0, 191, 255);
            doc.rect(15, y - 5, 180, 8, 'F');
            doc.setTextColor(255, 255, 255);
            doc.setFont(undefined, 'bold');
            doc.text('FAHRZEUGDATEN', 20, y);

            y += 10;
            doc.setTextColor(0, 0, 0);
            doc.setFont(undefined, 'bold');
            doc.text('Marke:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.marke, 50, y);
            doc.setFont(undefined, 'bold');
            doc.text('Modell:', 110, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.modell, 140, y);

            y += 7;
            if (data.baujahr) {
                doc.setFont(undefined, 'bold');
                doc.text('Baujahr:', 20, y);
                doc.setFont(undefined, 'normal');
                doc.text(data.baujahr, 50, y);
            }
            if (data.kmstand) {
                doc.setFont(undefined, 'bold');
                doc.text('KM-Stand:', 110, y);
                doc.setFont(undefined, 'normal');
                doc.text(data.kmstand + ' km', 140, y);
            }

            // LACKIER-INFO
            y += 12;
            doc.setFillColor(255, 149, 0);
            doc.rect(15, y - 5, 180, 8, 'F');
            doc.setTextColor(255, 255, 255);
            doc.setFont(undefined, 'bold');
            doc.setFontSize(13);
            doc.text('LACKIER-INFORMATIONEN', 20, y);

            y += 10;
            doc.setTextColor(0, 0, 0);
            doc.setFontSize(11);
            if (data.farbname) {
                doc.setFont(undefined, 'bold');
                doc.text('Farbname:', 20, y);
                doc.setFont(undefined, 'normal');
                doc.text(data.farbname, 55, y);
                y += 7;
            }

            // FARBNUMMER GROSS
            doc.setFillColor(255, 243, 205);
            doc.rect(15, y - 3, 180, 12, 'F');
            doc.setFont(undefined, 'bold');
            doc.setFontSize(14);
            doc.setTextColor(199, 37, 78);
            doc.text('FARBNUMMER:', 20, y + 4);
            doc.setFontSize(18);
            doc.text(data.farbnummer, 70, y + 4);

            y += 15;
            doc.setTextColor(0, 0, 0);
            doc.setFontSize(11);
            doc.setFont(undefined, 'bold');
            doc.text('Lackart:', 20, y);
            doc.setFont(undefined, 'normal');
            doc.text(data.lackart, 55, y);

            if (data.notizen) {
                y += 12;
                doc.setFont(undefined, 'bold');
                doc.text('Notizen:', 20, y);
                y += 7;
                doc.setFont(undefined, 'normal');
                const notizen = doc.splitTextToSize(data.notizen, 170);
                doc.text(notizen, 20, y);
                y += notizen.length * 5 + 10;
            } else {
                y += 15;
            }

            // Vorher-Fotos
            doc.setFont(undefined, 'bold');
            doc.setFontSize(14);
            doc.text('VORHER-Fotos (Annahme):', 20, y);
            y += 10;

            for (let i = 0; i < (data.photos || []).length; i += 2) {
                if (y > 240) {
                    doc.addPage();
                    y = 20;
                }

                const imgWidth = 80;
                const imgHeight = 60;

                safeAddImage(data.photos[i], 'JPEG', 20, y, imgWidth, imgHeight, `Vorher-Foto ${i+1}`);
                if (i + 1 < data.photos.length) {
                    safeAddImage(data.photos[i + 1], 'JPEG', 110, y, imgWidth, imgHeight, `Vorher-Foto ${i+2}`);
                }

                y += imgHeight + 10;
            }

            y += 10;
            doc.setFont(undefined, 'bold');
            doc.setFontSize(14);
            doc.text('NACHHER-Fotos (Abnahme):', 20, y);
            y += 10;

            const nachherPhotosForPDF = data.nachherPhotos || [];

            for (let i = 0; i < nachherPhotosForPDF.length; i += 2) {
                if (y > 240) {
                    doc.addPage();
                    y = 20;
                }

                const imgWidth = 80;
                const imgHeight = 60;

                safeAddImage(nachherPhotosForPDF[i], 'JPEG', 20, y, imgWidth, imgHeight, `Nachher-Foto ${i+1}`);
                if (i + 1 < nachherPhotosForPDF.length) {
                    safeAddImage(nachherPhotosForPDF[i + 1], 'JPEG', 110, y, imgWidth, imgHeight, `Nachher-Foto ${i+2}`);
                }

                y += imgHeight + 10;
            }

            // Unterschriften
            if (y > 180) {
                doc.addPage();
                y = 20;
            }

            y += 10;
            doc.setFont(undefined, 'bold');
            doc.setFontSize(12);
            doc.text('Unterschrift Annahme:', 20, y);
            doc.text('Unterschrift Abnahme:', 110, y);
            y += 5;

            safeAddImage(data.signature, 'PNG', 20, y, 70, 25, 'Annahme-Unterschrift');
            safeAddImage(data.abnahmeSignature, 'PNG', 110, y, 70, 25, 'Abnahme-Unterschrift');

            // PDF speichern
            const filename = `Abnahme_${data.kennzeichen.replace(/\s/g, '_')}_${data.abnahmeDatum.replace(/\./g, '')}.pdf`;
            doc.save(filename);

            if (failedImages > 0) {
                console.warn(`⚠️ ${failedImages} Foto(s) konnten nicht geladen werden`);
                setTimeout(() => {
                    alert(`⚠️ HINWEIS\n\n${failedImages} Foto(s) konnten nicht geladen werden.\n\nDie PDF wurde trotzdem erstellt, aber enthält Platzhalter-Fotos.`);
                }, 500);
            }
        }

        // Error/Success anzeigen
        function showError(message) {
            const errorDiv = document.getElementById('errorMessage');
            errorDiv.querySelector('span').textContent = message;
            errorDiv.style.display = 'flex';
            feather.replace();
            setTimeout(() => {
                errorDiv.style.display = 'none';
            }, 4000);
        }

        function showSuccess(message) {
            const successDiv = document.getElementById('successMessage');
            successDiv.querySelector('span').textContent = message;
            successDiv.style.display = 'flex';
            feather.replace();
            setTimeout(() => {
                successDiv.style.display = 'none';
            }, 3000);
        }

        function resetForm() {
            document.getElementById('vehicleInfo').classList.remove('show');
            document.getElementById('photoComparison').classList.remove('show');
            document.getElementById('signatureSection').classList.remove('show');
            document.getElementById('submitBtn').style.display = 'none';
            currentVehicle = null;
            nachherPhotos = [];
            updateNachherGrid();
            clearSignature();
        }

        // ============================================
        // 🌓 THEME TOGGLE SYSTEM (mit Feather Icons Stroke-Width Update)
        // ============================================

        (function initThemeToggle() {
            const themeToggle = document.getElementById('themeToggle');
            const html = document.documentElement;

            // Update Feather Icons stroke-width based on theme
            function updateFeatherIcons(theme) {
                const strokeWidth = theme === 'light' ? '2.5' : '2';
                document.querySelectorAll('i[data-feather]').forEach(icon => {
                    const svg = icon.querySelector('svg');
                    if (svg) {
                        svg.querySelectorAll('*[stroke]').forEach(element => {
                            element.setAttribute('stroke-width', strokeWidth);
                        });
                    }
                });
            }

            // Load theme from localStorage (default: dark)
            let currentTheme = localStorage.getItem('theme') || 'dark';
            html.setAttribute('data-theme', currentTheme);

            // Theme toggle on button click
            if (themeToggle) {
                themeToggle.addEventListener('click', () => {
                    currentTheme = currentTheme === 'light' ? 'dark' : 'light';
                    html.setAttribute('data-theme', currentTheme);
                    localStorage.setItem('theme', currentTheme);

                    // Re-initialize Feather Icons with updated stroke-width
                    if (typeof feather !== 'undefined') {
                        feather.replace();
                        setTimeout(() => updateFeatherIcons(currentTheme), 50);
                    }

                    console.log(`✅ Theme switched to: ${currentTheme}`);
                });
            }

            // Initialize Feather Icons on load with correct stroke-width
            if (typeof feather !== 'undefined') {
                feather.replace();
                setTimeout(() => updateFeatherIcons(currentTheme), 50);
            }

            console.log(`🌓 Theme loaded: ${currentTheme}`);
        })();
    </script>

    <!-- Error Handler & Storage Monitor -->
    <script src="error-handler.js"></script>
    <script src="storage-monitor.js"></script>
</body>
</html>
